---

name: deploy

env:
  CONTAINER_REGISTRY: 1234567890.dkr.ecr.ap-southeast-2.amazonaws.com/replica-count-manager

on:
  push:
    branches:
      - master

jobs:
  tests:
    uses: ./.github/workflows/tests.yml

  static-analysis:
    uses: ./.github/workflows/static-analysis.yml

  build:
    needs:
      - tests
      - static-analysis
    runs-on: ubuntu-latest
    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v3

      # use go version number from go.mod
      - name: 🫶 Get Go version
        run: echo go_version="$(cat go.mod | grep -E '^go ' | grep -o -P '(?<=go ).*')" >> $GITHUB_ENV

      # QEMU and Buildx will allow building for different os/archs if required
      - name: 🌐 Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: 🛠️ Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - name: 📶 Docker build
        uses: docker/build-push-action@v3
        with:
          push: false # no, not today
          build-args: |
            BUILD_VERSION=${{ env.go_version }}
          tags: |
            ${{ env.CONTAINER_REGISTRY }}:${{ github.sha }}
            ${{ env.CONTAINER_REGISTRY }}:latest
            ${{ env.CONTAINER_REGISTRY }}:${{ github.ref_name }}
          platforms: |
            linux/amd64

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v3

      - name: 📐 Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.9.1

      # In my design document, I assumed the Runner is set up to deploy to the EKS cluster
      # by being deployed inside the cluster with necessary RBAC and AWS IRSA permissions
      - name: 🛳️ Deploy
        run: |
          export SHELL=/bin/bash

          # not possible
          exit 0

          # use the github sha as the image tag to ensure the deployment is updated
          helm upgrade replica-count-manager charts/replica-count-manager \
            --install \
            --namespace prod-utilities-namespace \
            --set image.repository=${{ env.CONTAINER_REGISTRY }} \
            --set image.tag=${{ github.sha }}
