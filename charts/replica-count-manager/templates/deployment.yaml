apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "replica-count-manager.fullname" . }}
  labels:
    {{- include "replica-count-manager.labels" . | nindent 4 }}
  {{- with .Values.deployment.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "replica-count-manager.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "replica-count-manager.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "replica-count-manager.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.extraEnv }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.http.port }}
              protocol: TCP
            - name: grpc
              containerPort: {{ .Values.service.grpc.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: certificates
              mountPath: "/certificates"
              readOnly: true
            {{- if .Values.persistence.enabled }}
            - name: state
              mountPath: /mnt
            {{- end }}
            {{- if ne (len .Values.extraVolumeMounts) 0 }}
              {{ toYaml .Values.extraVolumeMounts | nindent 12 }}
            {{- end }}

      volumes:
        - name: certificates
          secret:
            secretName: {{ if .Values.certificates.existingSecret }} {{ .Values.certificates.existingSecret }} {{ else }} {{ include "replica-count-manager.fullname" . }}-server-certificates {{ end }}
            optional: false
        {{- if .Values.persistence.enabled }}
        - name: state
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.existingClaim }} {{ .Values.persistence.existingClaim }} {{ else }} {{ include "replica-count-manager.fullname" . }} {{ end }}
        {{- end }}
        {{- if ne (len .Values.extraVolumes) 0 }}
          {{ toYaml .Values.extraVolumes | nindent 10 }}
        {{- end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
